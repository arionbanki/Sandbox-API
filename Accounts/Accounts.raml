#%RAML 0.8
---
title: Accounts API - Arion banki Fintech
documentation: 
  - title: About Accounts - Deposit accounts
    content: |
      This service contains information on bank accounts to which a logged in user has access. In the case of test users, random data is created when logging in for first time and continues to be used after that.

      The information is comparable to the data which users have access to via Arion Online Banking, Arion App and Arion Bank’s B2B solutions. The user can both view their current and savings accounts.  The basic information for each account is displayed and transactions and balances can be viewed for each account.
            
  - title: Security
    content: |
      Service requests need to contain an API key which approved teams in the hackathon will be able to get through the API portal.  Moreover the service is protected with OAuth 2.0 authentication, which includes either an authorization code or implicit flow.

      At the moment the delimitation of authorizations is rather unsophisticated, an authenticated user gets access to all information under the resource.
baseUri: https://arionapi-sandbox.azure-api.net/accounts/{version}
version: v1
mediaType: application/json
securitySchemes:
  - oauth_2_0:
      description: |
        OAuth2 is a protocol that lets external apps request authorization to private
        details in a user's financial data.
      type: OAuth 2.0
      describedBy:
        headers:
          Authorization:
            description: |
              Used to send a valid OAuth 2 access token. 
            type: string
        responses:
          401:
            description: Unauthorized
      settings:
        authorizationUri: https://arionapi-identityserver3-sandbox.azurewebsites.net/connect/authorize
        accessTokenUri: https://arionapi-identityserver3-sandbox.azurewebsites.net/connect/token
        authorizationGrants: [ authorization_code, implicit ]
        scopes:
          - "financial"
securedBy: [ oauth_2_0 ]

traits:  
  - subscribable:
      usage: Include your API subscription.
      headers:
        Ocp-Apim-Subscription-Key:
          description: |
            Used to send a valid subscription key.
          type: string        
  - pageable:
          queryParameters:
            page:
              description: The page parameter defines the page number of the result set to return the data. For example, if your query returns 500 records, you can specify pageCount as 50 to return 50 records in a page, which implies that you’ll have 10 pages of data (50 records * 10 pages = 500). Now, if you want to return records 100-150, specify the page value as 3
              type: integer
              required: false
              minimum: 1
              example: 1
              default: 1
            perPage:
              description: The perPage parameter defines the number of records to return per page.
              type: integer
              required: false
              maximum: 500
              example: 10
              default: 10  
  - searchable:
      usage: Apply this to any method that can be filtered by a search field and value.
      description: |
        Some requrest can be filtered by a search field and value.
      queryParameters:
        searchField:
          description: |
            The field to be searched on.
          type: string
          required: false
          example: 'cardBrand'
        searchValue:
          description: |
            The value to search the field against.
          type: string
          required: false
          example: 'VISA'
          
  - date_searchable:
      usage: Apply this to any method that can be filtered by a start and end date.
      description: |
        Some requests can be filtered by a date range.
      queryParameters:
        dateFrom:
          description: |
            The start date used to filter the results.
          type: string
          required: false
          example: '2016-01-01' 
        dateTo:
          description: |
            The end date used to filter the results.
          type: string
          required: false
          example: '2016-12-31'              

schemas:
  - transactionCollection: |
      {
        "$schema": "http://json-schema.org/draft-03/schema",
        "type": "object",
        "properties": {
        
        
        
        
       "paging": {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "description": "Contains information on paging on the transaction overview.",
            "required": true,
            "properties": {
              "totalPages": {
                "type": "integer",
                "description": "Total pages"
              },                                                                    
              "totalRecords": {
                "type": "integer",
                "description": "Total number of transactions during period"
              }
            }
          },                              
        "transaction": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "AccountID": {
                  "type": "string",
                  "required": true,
                  "description": "The ID of the account. Unique number of an account issued by the bank.",
                  "comment": "Einkvæmt númer bankareiknings, útgefið af viðskiptabanka."
                },
                "transactionID": {
                  "type": "string",
                  "required": true,
                  "description": "Unique identifier for this transaction with the originating system.",
                  "comment": "Einkennisnúmer færslu"
                },
                "transactionDate": {
                  "type": "string",
                  "format": "date-time",
                  "required": true,
                  "description": "The date when this transaction was booked.",
                  "comment": "Bókunardagur færslunnar"
                },
                "valueDate": {
                  "type": "string",
                  "format": "date-time",
                  "required": true,
                  "description": "Value Date. Used when transactions need to be corrected and new date for interest calculation is used instead. Notuð þegar verið er að leiðrétta færslur aftur í tímann og þá segir þessi dagsetning hvaða vaxtadag er miðað við.",
                  "comment": "Vaxtadagsetning færslunnar"
                },
                "batchNumber": {
                  "type": "string",
                  "required": true,
                  "comment": "Unique batch identifier. Number represents the executor of a transaction within the bank.",
                  "description": "Bunkanúmer. Segir til um hver framkvæmdi færslu innan viðskiptabanka (einkvæmt númer afgreiðslu)"
                },
                "redeemingBank": {
                  "type": "string",
                  "required": true,
                  "description": "The bank where the transaction originated.",
                  "comment": "Innlausnarbanki, bankanúmer viðskiptabanka sem framkvæmdi færslu"
                },
                "transactionKey": {
                  "type": "string",
                  "required": true,
                  "description": "Transaction Key. Indicates the type of transaction.",
                  "comment": "Færslulykill. Segir til um tegund færslu t.d. innborgun, útborgun, krafa eða C gíró"
                },
                "reference": {
                  "type": "string",
                  "required": true,
                  "comment": "Reference. Commonly used for social security number of the payer.",
                  "comment": "Tilvísun. Oftast notað fyrir kennitölu greiðanda"
                },
                "billNumber": {
                  "type": "string",
                  "required": true,
                  "description": "Bill number. Seven letter reference number.",
                  "comment": "Seðilnúmer. Sjö stafa tilvísunarnúmer"
                },
                "categoryCode": {
                  "type": "string",
                  "required": true,
                  "description": "Category code. Descripes the type of transaction, defined by the bank.",
                  "comment": "Textalykill. Skilgreining á tegund færslu. Textalykill er skilgreindur í viðskiptabanka"
                },
                "category": {
                  "type": "string",
                  "required": true,
                  "description": "Expands on the category code and gives the fulltext explanation.",
                  "comment": "Skýring textalykils. Nánari lýsing á textalykli"
                },
                "referenceDetail": {
                  "type": "string",
                  "required": true,
                  "description": "Expands on the information in the reference, usually by trying to matching the information entered with person identification numbers.",
                  "comment": "Skýring tilvísunar. Nánari upplýsingar byggðar á gögnum í svæðinu Tilvísun"
                },
                "payorID": {
                  "type": "string",
                  "required": true,
                  "description": "Person ID of payor.",
                  "comment": "Kennitala greiðanda"
                },
                "amount": {
                  "type": "number",
                  "required": true,
                  "description": "The balance of the account after this transaction.",
                  "comment": "Upphæð"
                },
                "balance": {
                  "type": "number",
                  "required": true,
                  "description": "The balance of the account after this transaction ",
                  "comment": "Staða eftir færslu."
                }
              }
            }
          }
        }
      }
  - account: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "http://jsonschema.net",
        "description": "A bank account.",
        "comment": "Bankareikningur.",
        "required": true,
        "properties": {
          "accountID": {
            "type": "string",
            "required": true,
            "description": "The ID of the account.",
            "comment": "Reikningsnúmer. Einkvæmt númer reiknings sem er gefið út af viðskiptabanka."
          },
          "overdraft": {
            "type": "number",
            "required": true,
            "description": "Overdraft permission of the account.",
            "comment": "Upphæð yfirdráttarheimildar sem skráð er á bankareikninginn."
          },
          "balance": {
            "type": "number",
            "required": true,
            "description": "The balance of the account.",
            "comment": "Staða bankareiknings."
          },
          "availableAmount": {
            "type": "number",
            "required": true,
            "description": "The amount available to the account holder. Balance and overdraft used for calculation.",
            "comment": "Upphæð ráðstöfunar. Staða og yfirdráttur reiknings mynda þessa upphæð."
          },
          "status": {
            "enum": [ "open", "closed", "onhold" ],
            "description": "The status of the account (open/closed/onhold).",
            "comment": "Ástand bankareiknings. Segir til um hvort reikningur er opinn eða lokaður."
          },
          "totalAmountWaiting": {
            "type": "number",
            "required": true,
            "description": "The total amount of transactions waiting and exceeding amount available. Transaction is executed as soon as the amount becomes available.",
            "comment": "Heildarupphæð innistæðulausra úttekta sem bíða eftir skuldfærslu út af viðkomandi bankareikningi. Skuldfærsla á sér stað um leið og innstæða er næg á reikningi."
          },
          "accountOwnerID": {
            "type": "string",
            "description": "PersonID of account owner.",
            "comment": "Kennitala reikningseiganda."
          },
          "customAccountName": {
              "type": "string",
              "description": "Name set by account owner. Account owner can name his/hers account. Name set by account owner. Account owner can name his/her description.",
              "comment": "Nafn (gælunafn) sett inn af eiganda bankareiknings. Reikningseigandi getur gefið reikningi gælunafn t.d. í gegnum netbanka viðskiptabanka."
          }
        }
      }
  - accountCollection: |
      {
        "$schema": "http://json-schema.org/draft-03/schema",
        "type": "object",
        "properties": {
        "totalCount": {
            "type": "integer",
            "description": "The total count of transaction available by selection. If 0, then",
            "description": "Fjöldi færslna í sem hægt er að sækja."
        },
        "account": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountID": {
                  "type": "string",
                  "required": true,
                  "description": "The ID of the account.",
                  "comment": "Reikningsnúmer. Einkvæmt númer reiknings sem er gefið út af viðskiptabanka."
                },
                "overdraft": {
                  "type": "number",
                  "required": true,
                  "description": "Overdraft permission of the account.",
                  "comment": "Upphæð yfirdráttarheimildar sem skráð er á bankareikninginn."
                },
                "balance": {
                  "type": "number",
                  "required": true,
                  "description": "The balance of the account.",
                  "comment": "Staða bankareiknings."
                },
                "availableAmount": {
                  "type": "number", 
                  "required": true,
                  "description": "The amount available to the account holder. Balance and overdraft used for calculation.",
                  "comment": "Upphæð ráðstöfunar. Staða og yfirdráttur reiknings mynda þessa upphæð."
                },
                "status": {
                  "enum": [ "open", "closed", "onhold" ],
                  "description": "The status of the account (open/closed/onhold).",
                  "comment": "Ástand bankareiknings. Segir til um hvort reikningur er opinn eða lokaður."
                },
                "totalAmountWaiting": {
                  "type": "number",
                  "required": true,
                  "description": "The total amount of transactions waiting and exceeding amount available. Transaction is executed as soon as the amount becomes available.",
                  "comment": "Heildarupphæð innistæðulausra úttekta sem bíða eftir skuldfærslu út af viðkomandi bankareikningi. Skuldfærsla á sér stað um leið og innstæða er næg á reikningi."
                },
                "accountOwnerID": {
                  "type": "string",
                  "description": "Personal identifier, kennitala, of account owner.",
                  "comment": "Kennitala reikningseiganda."
                },
                "customAccountName": {
                    "type": "string",
                    "description": "Name set by account owner. Account owner can name his/hers account. Name set by account owner. Account owner can name his/her account.",
                    "comment": "Nafn (gælunafn) sett inn af eiganda bankareiknings. Reikningseigandi getur gefið reikningi gælunafn t.d. í gegnum netbanka viðskiptabanka."
                }
              }
            }
          }
        }
      }

/accounts:
    securedBy: [ oauth_2_0 ]
    is: [ subscribable ]
    displayName: Accounts
    get:          
      description: Retrieves information about available accounts.
      responses:
        200:
          body:
              application/json:
                schema: accountCollection
                example: |
                  {
                    "TotalCount": 2,
                    "Account": [
                      {
                        "AccountID": "039926011462",
                        "Overdraft": 0,
                        "Balance": 299,
                        "AvailableAmount": 299,
                        "TotalAmountWaiting": 0,
                        "AccountOwnerID": "1725704905",
                        "CustomAccountName": "Félag áhugamanna um heimabanka",
                        "Id": 1
                      }
                    ]
                  }
    /{accountId}:
        displayName: Accounts - Get single account
        securedBy: [ oauth_2_0 ]
        is: [ subscribable ]
        description: A single account identified by account ID.
        get:
          description:  Information about an account.
          responses:
            200:
              body:
                  application/json:
                    schema: account
                    example: |
                      {
                        "AccountID": "039926011462",
                        "Overdraft": 0,
                        "Balance": 299,
                        "AvailableAmount": 299,
                        "TotalAmountWaiting": 0,
                        "AccountOwnerID": "1725704905",
                        "CustomAccountName": "Félag áhugamanna um heimabanka",
                        "Id": 1
                      }          
        /accountTransactions:
            securedBy: [ oauth_2_0 ]
            is: [ date_searchable, pageable, subscribable ]        
            displayName: Account transactions
            description: Provides an overview of account transactions. It is not permitted to get all transactions at once. Instead you have to define page number and transactions per page.
            get:          
              description: Returns list of transactions that can be filtered by transaction date. It is possible to get the data by defining page number and page size.
              queryParameters:
                dateFrom:
                   displayName: Start date
                   type: string
                   required: false
                   description: Date from, inclusive
                   example: 2012-01-31
                dateTo:
                   displayName: Final date
                   type: string
                   required: false
                   description: Date to, inclusive
                   example: 2012-01-31
              responses:
                200:
                  body:
                      application/json:
                        schema: transactionCollection
                        example: |
                          {
                            "transactionID": "1725704905",
                            "transactionDate": "2012-01-30"
                          }
